# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    'exec-and-forget sketchybar',
    'exec-and-forget sketchybar-2',
    'exec-and-forget sketchybar-3'
]

# Start AeroSpace at login
start-at-login = true

# Notify Sketchybar about workspace change

# on-focus-changed = [
#    'exec-and-forget sketchybar --trigger aerospace_workspace_change "FOCUSED_WORKSPACE=$(list-workspaces --focused) FOCUSED_WORKSPACE_WINDOWS=$(list-windows --workspace $AEROSPACE_FOCUSED_WORKSPACE --format "%{monitor-id}|%{workspace}|%{app-name}")"',
#    'exec-and-forget sketchybar-2 --trigger aerospace_workspace_change "FOCUSED_WORKSPACE=$(list-workspaces --focused) FOCUSED_WORKSPACE_WINDOWS=$(list-windows --workspace $AEROSPACE_FOCUSED_WORKSPACE --format "%{monitor-id}|%{workspace}|%{app-name}")"'
# ]

# on-focus-changed = [
#    'exec-and-forget sketchybar --trigger aerospace_workspace_change "FOCUSED_WORKSPACE=$(list-workspaces --focused)"',
# ]

exec-on-workspace-change = [
    '/bin/bash', 
    '-c',
    '''
    FOCUSED_MONITOR=$(aerospace list-monitors --focused --format "%{monitor-id}" | xargs);
    FOCUSED_WORKSPACE_WINDOWS=$(aerospace list-windows --workspace $AEROSPACE_FOCUSED_WORKSPACE --format "%{monitor-id}|%{workspace}|%{app-name}");
    PREV_WORKSPACE_WINDOWS=$(aerospace list-windows --workspace $AEROSPACE_PREV_WORKSPACE --format "%{monitor-id}|%{workspace}|%{app-name}");
    sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE PREV_WORKSPACE=$AEROSPACE_PREV_WORKSPACE FOCUSED_WORKSPACE_WINDOWS="$FOCUSED_WORKSPACE_WINDOWS" PREV_WORKSPACE_WINDOWS="$PREV_WORKSPACE_WINDOWS" FOCUSED_MONITOR=$FOCUSED_MONITOR;
    sketchybar-2 --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE PREV_WORKSPACE=$AEROSPACE_PREV_WORKSPACE FOCUSED_WORKSPACE_WINDOWS="$FOCUSED_WORKSPACE_WINDOWS" PREV_WORKSPACE_WINDOWS="$PREV_WORKSPACE_WINDOWS" FOCUSED_MONITOR=$FOCUSED_MONITOR;
    '''
]

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
#on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
#on-focus-changed = ["move-mouse window-lazy-center"]

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
    preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
    inner.horizontal = 10
    inner.vertical =   10
    outer.left =       10
    outer.bottom =     10
    outer.top =        [{ monitor.'^built-in retina display$' = 10 }, 40]
    outer.right =      10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

    # All possible keys:
    # - Letters.        a, b, c, ..., z
    # - Numbers.        0, 1, 2, ..., 9
    # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
    # - F-keys.         f1, f2, ..., f20
    # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
    #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
    #                   backspace, tab
    # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
    #                   keypadMinus, keypadMultiply, keypadPlus
    # - Arrows.         left, down, up, right

    # All possible modifiers: cmd, alt, ctrl, shift

    # All possible commands: https://nikitabobko.github.io/AeroSpace/commands

    # See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
    # You can uncomment the foHllowing lines to open up terminal with alt + enter shortcut
    # (like in i3)
    # alt-enter = '''exec-and-forget osascript -e '
    # tell application "Terminal"               
    #     do script
    #     activate
    # end tell'
    # '''

    ctrl-tab = 'workspace next --wrap-around'
    ctrl-shift-tab = 'workspace prev --wrap-around'

    ctrl-t = 'layout floating tiling'

    # See: https://nikitabobko.github.io/AeroSpace/commands#layout
    ctrl-period = 'layout horizontal vertical'
    ctrl-comma = 'layout accordion tiles'

    # See: https://nikitabobko.github.io/AeroSpace/commands#focus
    ctrl-h = 'focus left' # --boundaries all-monitors-outer-frame
    ctrl-j = 'focus down' # --boundaries all-monitors-outer-frame
    ctrl-k = 'focus up' # --boundaries all-monitors-outer-frame
    ctrl-l = 'focus right' # --boundaries all-monitors-outer-frame

    # See: https://nikitabobko.github.io/AeroSpace/commands#fullscreenj
    ctrl-m = 'fullscreen'
    ctrl-shift-m = 'macos-native-fullscreen'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move
    ctrl-shift-h = 'move left'
    ctrl-shift-j = 'move down'
    ctrl-shift-k = 'move up'
    ctrl-shift-l = 'move right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#join-with
    ctrl-shift-alt-h = 'join-with left'
    ctrl-shift-alt-j = 'join-with down'
    ctrl-shift-alt-k = 'join-with up'
    ctrl-shift-alt-l = 'join-with right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#resize
    ctrl-shift-a = 'resize smart +140'
    ctrl-shift-z = 'resize smart -140'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace
    ctrl-1 = 'workspace 1'
    ctrl-2 = 'workspace 2'
    ctrl-3 = 'workspace 3'
    ctrl-4 = 'workspace 4'
    ctrl-5 = 'workspace 5'
    ctrl-6 = 'workspace 6'
    ctrl-7 = 'workspace 7'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
    ctrl-shift-1 = 'move-node-to-workspace 1'
    ctrl-shift-2 = 'move-node-to-workspace 2'
    ctrl-shift-3 = 'move-node-to-workspace 3'
    ctrl-shift-4 = 'move-node-to-workspace 4'
    ctrl-shift-5 = 'move-node-to-workspace 5'
    ctrl-shift-6 = 'move-node-to-workspace 6'
    ctrl-shift-7 = 'move-node-to-workspace 7'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
    #alt-tab = 'workspace-back-and-forth'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
    #alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

    # See: https://nikitabobko.github.io/AeroSpace/commands#mode
    #ctrl-shift-s = 'mode service'
    ctrl-shift-s = 'exec-and-forget sketchybar-3 --trigger toggle_enabled'

    # Go to sleep
    cmd-ctrl-s = 'exec-and-forget pmset sleepnow'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
    esc = ['mode main']
    space = ['mode main']
    r = ['reload-config', 'mode main']
    f = ['flatten-workspace-tree', 'mode main'] # reset layout
    t = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
    backspace = ['close-all-windows-but-current', 'mode main']

    # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
    #s = ['layout sticky tiling', 'mode main']

    # See: https://nikitabobko.github.io/AeroSpace/commands#focus
    
    left = 'focus left --boundaries all-monitors-outer-frame'
    down = 'focus down --boundaries all-monitors-outer-frame'
    up = 'focus up --boundaries all-monitors-outer-frame'
    right = 'focus right --boundaries all-monitors-outer-frame'

    cmd-left = 'move left'
    cmd-down = 'move down'
    cmd-up = 'move up'
    cmd-right = 'move right'

    cmd-shift-left = ['join-with left', 'mode main']
    cmd-shift-down = ['join-with down', 'mode main']
    cmd-shift-up = ['join-with up', 'mode main']
    cmd-shift-right = ['join-with right', 'mode main']

    # See: https://nikitabobko.github.io/AeroSpace/commands#balance-sizes
    b = ['balance-sizes', 'mode main']

    s = ['exec-and-forget sketchybar --reload', 'mode main']
    cmd-s = ['exec-and-forget sketchybar-2 --reload', 'mode main']

[workspace-to-monitor-force-assignment]

 #   1 = 'main'
 #   2 = 'main'
#    3 = 'main'
#    4 = 'main'
#     5 = ['secondary','main']
     6 = ['secondary','main']
     7 = ['secondary','main']

[[on-window-detected]]
    if.app-id = 'com.microsoft.AzureVpnMac'
    run = 'layout floating'

[[on-window-detected]]
    if.app-id = 'com.microsoft.rdc.macos'
    run = 'layout floating'

[[on-window-detected]]
    if.app-id = 'com.hegenberg.BetterTouchTool'
    run = 'layout floating'

[[on-window-detected]]
    if.app-id = 'com.bankid.BankID'
    run = 'layout floating'